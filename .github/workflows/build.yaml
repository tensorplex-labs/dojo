name: Docker Build and Push

on:
  workflow_run:
    workflows: ["Build Go Binaries"]
    types:
      - completed
    branches:
      - dev
      - staging
      - main

jobs:
  read_matrix:
    runs-on: arc-runner-set
    outputs:
      matrix: ${{ steps.read_matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read matrix from file
        id: read_matrix
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const fs = require('fs');
            const matrix = fs.readFileSync('.github/matrix-config.json', 'utf8');
            core.setOutput('matrix', matrix);

  docker_publish:
    needs: read_matrix
    name: Build (${{ matrix.app.name }})
    runs-on: arc-runner-set
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: read
      packages: write
      actions: read

    strategy:
      matrix:
        app: ${{ fromJson(needs.read_matrix.outputs.matrix).app }}
      max-parallel: 6
    steps:
      - name: Download binary artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ matrix.app.name }}-linux-*
          path: dist
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: List available binaries
        run: |
          echo "Available binaries:"
          ls -la dist/

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.app.name }}
          tags: |
            type=raw,value=latest,enable=${{ github.event.workflow_run.head_branch == 'main' }}
            type=raw,value=${{ github.event.workflow_run.head_branch }},enable=${{ github.event.workflow_run.head_branch != 'main' }}
            type=ref,event=tag

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
        with:
          platforms: ${{ join(fromJson(needs.read_matrix.outputs.matrix).platform, ',') }}

      - name: Build and Publish
        uses: docker/build-push-action@v6.18.0
        with:
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          platforms: ${{ join(fromJson(needs.read_matrix.outputs.matrix).platform, ',') }}
          build-contexts: |
            binaries=./dist
          build-args: |
            APP_NAME=${{ matrix.app.name }}
